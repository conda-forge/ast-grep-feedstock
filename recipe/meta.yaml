{% set name = "ast-grep" %}
{% set version = "0.19.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/{{ name }}/{{ name }}/archive/refs/tags/{{ version }}.tar.gz
  sha256: 6b12d5641eb3c5b282aa4f56018fbea991256e9cb2c221368394bb3209d2257f
  patches:
    # ast-grep 0.18.0 pins to tree-sitter-cpp 0.22.3
    # which fails to build in the standard conda-forge environment
    # with link errors against static_assert
    # see, maybe: https://github.com/tree-sitter/tree-sitter-cpp/commit/2c93b82af7674e82e862d03133fd7abe6bd23cf0
    # in tree-sitter-cpp > 0.22.3
    - 0001-Downgrade-tree-sitter-cpp-for-statis_assert-build-er.patch

build:
  number: 0
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('rust') }}
    - cargo-bundle-licenses
  run:
      # for details see conda_build_config.yaml
    - __osx >={{ MACOSX_DEPLOYMENT_TARGET | default('10.12') }}     # [osx and x86_64]


test:
  commands:
    - sg --version

about:
  home: https://github.com/ast-grep/ast-grep
  summary: 'ast-grep(sg) is a CLI tool for code structural search, lint, and rewriting.'
  description: |
    ast-grep is an AST-based tool to search code by pattern code. Think it as
    your old-friend grep but it matches AST nodes instead of text. You can
    write patterns as if you are writing ordinary code. It will match all code
    that has the same syntactical structure. You can use $ sign + upper case
    letters as wildcard, e.g. $MATCH, to match any single AST node. Think it as
    REGEX dot ., except it is not textual.
  license: MIT
  license_family: MIT
  license_file:
    - THIRDPARTY.yml
    - LICENSE
  doc_url: https://ast-grep.github.io/
  dev_url: https://github.com/ast-grep/ast-grep

extra:
  recipe-maintainers:
    - asford
